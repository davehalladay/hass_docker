# Docker compose file for HASS
#
# - Home-Assistant   port 8123
# - MySQL            port 3306 (internal)
# - NodeRed          port 1880
# - Mosquitto        port 1883
# - Grafana          port 3000

version: "3"

services:
  home-assistant:
    container_name: homeassistant
    restart: unless-stopped
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ./hass-config:/config
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - db
      - mosquitto
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ="America/New_York"
    privileged: true
    network_mode: host
    # ports:
    #   - 8123:8123

  mosquitto:
    container_name: homeassistant_mqtt
    restart: always
    image: eclipse-mosquitto:latest
    ports:
      - 9001:9001
      - 1883:1883
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ="America/New_York"
    volumes:
      - ./mosquitto/passwd:/mosquitto/config/passwd
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - /etc/localtime:/etc/localtime:ro
    # network_mode: host

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    user: "$PUID:$PGID"
    depends_on:
      - db
    volumes:
      - ./grafana/data:/var/lib/grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    # network_mode: host

  db:
    container_name: hass_db
    image: postgres:13-alpine
    volumes:
      - ./database/data/:/var/lib/postgresql/data/
    restart: always
    env_file:
      # Read all environment variables from env file to configure mysql instance
      - .env
    ports:
      - 5432:5432

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    restart: unless-stopped
    ports:
      - 1880:1880
    volumes:
      - ./nodered:/data
    depends_on:
      - home-assistant
      - mosquitto
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ="America/New_York"
  nginx-proxy-manager:
    container_name: nginx_proxy
    restart: always
    image: jlesage/nginx-proxy-manager:latest
    ports:
      - 8181:8181
      - 8080:8080
      - 4443:4443
    volumes:
      - ./nginx-proxy-manager/:/config:rw

  # https://github.com/hertzg/rtl_433_docker
  rtl_433:
    container_name: rtl_433
    image: hertzg/rtl_433:latest
    restart: always
    devices:
      - '/dev/bus/usb/003/002'
    depends_on:
      - mosquitto
    command:
      - '-Mtime:unix:usec:utc'
      - '-Mbits'
      - '-Mlevel'
      - '-Mprotocol'
      - '-Mstats:2:300'
      - '-Fmqtt://mosquitto:1883,retain=1,devices=rtl_433[/id]'

  pi_hole:
    container_name: pihole
    image: cbcrowe/pihole-unbound:latest
    hostname: ${HOSTNAME}
    domainname: ${DOMAIN_NAME}
    ports:
      - 53:53/tcp
      - 53:53/udp
      - ${PIHOLE_WEBPORT:-80}:80/tcp
    environment:
      - FTLCONF_REPLY_ADDR4=${FTLCONF_REPLY_ADDR4}
      - TZ=${TZ:-UTC}
      - WEBPASSWORD=${WEBPASSWORD}
      - WEBTHEME=${WEBTHEME:-default-light}
      - REV_SERVER=${REV_SERVER:-false}
      - REV_SERVER_TARGET=${REV_SERVER_TARGET}
      - REV_SERVER_DOMAIN=${REV_SERVER_DOMAIN}
      - REV_SERVER_CIDR=${REV_SERVER_CIDR}
      - PIHOLE_DNS_=127.0.0.1#5335
      - DNSSEC="true"
      - DNSMASQ_LISTENING=single
    volumes:
      - ./etc_pihole-unbound:/etc/pihole:rw
      - ./etc_pihole_dnsmasq-unbound:/etc/dnsmasq.d:rw
      - './resolv.conf:/etc/resolv.conf'
    restart: unless-stopped
